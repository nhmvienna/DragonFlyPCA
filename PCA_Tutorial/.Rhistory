## First load packages FactoMineR and tidyverse
install.packages("FactoMineR")
install.packages("tidyverse")
library("FactoMineR")
library("tidyverse")
DATA=read.table("~/Desktop/Test4PCA/Dataset.txt")
DATA=read.table("~/Desktop/Test4PCA/Dataset.txt",
sep="\t",
header=T)
PCA=prcomp(DATA[,5:ncol(DATA)])
PCA$x
biplot(pca)
biplot(PCA<)
biplot(PCA)
PCA = PCA(DATA[,5:ncol(DATA)], scale.unit=TRUE, ncp=5, graph=T)
PCA = PCA(DATA[,5:ncol(DATA)],
scale.unit=F,
ncp=5,
graph=T)
PCA = PCA(DATA[,5:ncol(DATA)],
scale.unit=T,
ncp=5,
graph=T)
PCA = PCA(DATA[,5:ncol(DATA)],
scale.unit=T,
graph=T)
DATA.PCA = PCA(DATA[,5:ncol(DATA)],
scale.unit=T,
graph=F)
plot(DATA.PCA)
biplot(DATA.PCA)
loadings(DATA.PCA)
?plot.PCA
plot(DATA.PCA)
plot(DATA.PCA,
choix="Var")
plot(DATA.PCA,
choix="var")
install.packages("corrplot")
## (1) At first, we need to test if the environmental variablwes we want to test are intercorrelated
cor.mat <- round(cor(DATA[,5:ncol(DATA)]),2)
## (1) At first, we need to test if the environmental variablwes we want to test are intercorrelated
DATA.cor <- round(cor(DATA[,5:ncol(DATA)]),2)
corrplot(DATA.cor,
type="upper",
order="hclust",
tl.col="black",
tl.srt=45)
library("corrplot") ## To make nice correlation plots
corrplot(DATA.cor,
type="upper",
order="hclust",
tl.col="black",
tl.srt=45)
setwd("~/Desktop/Test4PCA/")
DATA=read.table("Dataset.txt",
sep="\t",
header=T)
ggsave("Data.corr.pdf",
DATA.cor )
pdf("DATA_cor.pdf",
width=10,
height=10)
pdf("DATA_cor.pdf",
width=10,
height=10)
DATA.cor
dev.off()
pdf("DATA_cor.pdf",
DATA.cor,
width=10,
height=10)
dev.off()
?pdf
pdf("DATA_cor.pdf",
width=10,
height=10)
DATA.cor <- corrplot(DATA.cor,
type="upper",
order="hclust",
tl.col="black",
tl.srt=45)
dev.off()
DATA.PCA.load <- plot(DATA.PCA,
choix="var")
ggsave("DATA.PCA.load.pdf",
DATA.PCA.load,
width=15,
height=15)
rownames(DATA) <- DATA[,1]
DATA.PCA = PCA(DATA[,5:ncol(DATA)],
scale.unit=T,
graph=F)
DATA.PCA.ind <- plot(DATA.PCA,
choix="ind")
DATA.PCA.ind
DATA=read.table("Dataset.txt",
sep="\t",
header=T)
## We now add the first column as the rownames that can be later used for plotting
rownames(DATA) <- DATA[,1]
DATA.PCA = PCA(DATA[,5:ncol(DATA)],
scale.unit=T,
graph=F)
DATA.PCA.ind <- plot(DATA.PCA,
choix="ind")
DATA.PCA.ind
eigenvalues <- res.pca$eig
DATA.PCA.eigenvalues <- DATA.PCA$eig
DATA.PCA.eigenvalues
?plot.PCA
# Add connected line segments to the plot
lines(x = 1:nrow(DATA.PCA.eigenvalues),
DATA.PCA.eigenvalues[, 3],
type="b",
pch=19,
col = "red")
barplot(DATA.PCA.eigenvalues[, 3],
names.arg=1:nrow(eigenvalues),
main = "Variances",
xlab = "Principal Components",
ylab = "Percentage of variances",
col ="steelblue")
# Add connected line segments to the plot
lines(x = 1:nrow(DATA.PCA.eigenvalues),
DATA.PCA.eigenvalues[, 3],
type="b",
pch=19,
col = "red")
barplot(DATA.PCA.eigenvalues[, 3],
names.arg=1:nrow(DATA.PCA.eigenvalues),
main = "Variances",
xlab = "Principal Components",
ylab = "Percentage of variances",
col ="steelblue")
# Add connected line segments to the plot
lines(x = 1:nrow(DATA.PCA.eigenvalues),
DATA.PCA.eigenvalues[, 3],
type="b",
pch=19,
col = "red")
hline(y=80,col="black",lty=2)
abline(y=80,col="black",lty=2)
abline(h=80,col="black",lty=2)
barplot(DATA.PCA.eigenvalues[, 3],
names.arg=1:nrow(DATA.PCA.eigenvalues),
main = "Variances",
xlab = "Principal Components",
ylab = "Percentage of variances",
col ="steelblue")
# Add connected line segments to the plot
lines(x = 1:nrow(DATA.PCA.eigenvalues),
DATA.PCA.eigenvalues[, 3],
type="b",
pch=19,
col = "red")
abline(h=80,
col="black",
lty=2,
lwd=2)
pdf("DATA.PCA.var.pdf",
height=10,
width=15)
barplot(DATA.PCA.eigenvalues[, 3],
names.arg=1:nrow(DATA.PCA.eigenvalues),
main = "Variances",
xlab = "Principal Components",
ylab = "Percentage of variances",
col ="steelblue")
# Add connected line segments to the plot
lines(x = 1:nrow(DATA.PCA.eigenvalues),
DATA.PCA.eigenvalues[, 3],
type="b",
pch=19,
col = "red")
# Add horizontal line at 80%
abline(h=80,
col="black",
lty=2,
lwd=2)
dev.off()
?plot.PCA
DATA.PCA.load <- plot(DATA.PCA,
choix="var",
axes=c(1,2,3))
DATA.PCA.load
library("gridExtra") ## to plot side by side
DATA.PCA.load.1.2 <- plot(DATA.PCA,
choix="var",
axes=c(1,2))
DATA.PCA.load.1.3 <- plot(DATA.PCA,
choix="var",
axes=c(1,3))
ggsave("DATA.PCA.load.pdf",
arrangeGrob(DATA.PCA.load.1.2,
DATA.PCA.load.1.3),
width=30,
height=15)
ggsave("DATA.PCA.load.pdf",
arrangeGrob(DATA.PCA.load.1.2,
DATA.PCA.load.1.3,
ncol=2),
width=30,
height=15)
ggsave("DATA.PCA.load.pdf",
arrangeGrob(DATA.PCA.load.1.2,
DATA.PCA.load.1.3,
ncol=2),
width=20,
height=10)
DATA.PCA.load.1.2 <- plot(DATA.PCA,
choix="var",
axes=c(1,2))
DATA.PCA.load.2.3 <- plot(DATA.PCA,
choix="var",
axes=c(2,3))
ggsave("DATA.PCA.load.pdf",
arrangeGrob(DATA.PCA.load.1.2,
DATA.PCA.load.2.3,
ncol=2),
width=20,
height=10)
DATA.PCA.load.1.2 <- plot(DATA.PCA,
choix="var",
axes=c(1,2))
DATA.PCA.load.2.3 <- plot(DATA.PCA,
choix="var",
axes=c(2,3))
ggsave("DATA.PCA.load.pdf",
arrangeGrob(DATA.PCA.load.1.2,
DATA.PCA.load.2.3,
ncol=2),
width=20,
height=10)
## (a) Plot the loadings for axes 1,2 and 3
DATA.PCA.load.1.2 <- plot(DATA.PCA,
choix="var",
axes=c(1,2))
DATA.PCA.load.1.3 <- plot(DATA.PCA,
choix="var",
axes=c(1,3))
ggsave("DATA.PCA.load.pdf",
arrangeGrob(DATA.PCA.load.1.2,
DATA.PCA.load.1.3,
ncol=2),
width=20,
height=10)
DATA.PCA.ind.1.2 <- plot(DATA.PCA,
choix="ind",
axes=c(1,2))
DATA.PCA.ind.1.3 <- plot(DATA.PCA,
choix="ind",
axes=c(1,3))
ggsave("DATA.PCA.samples.pdf",
arrangeGrob(DATA.PCA.ind.1.2,
DATA.PCA.ind.1.3,
ncol=2),
width=20,
height=10)
DATA.PCA.ind.1.2 <- plot(DATA.PCA,
choix="ind",
axes=c(1,2))
DATA.PCA.ind.1.3 <- plot(DATA.PCA,
choix="ind",
axes=c(1,3))
DATA.PCA.ind.1.2
DATA.PCA.ind.1.3
?plot.PCA
DATA.PCA.ind.1.2 <- plot(DATA.PCA,
choix="ind",
axes=c(1,2),
graph.type = "classic")
DATA.PCA.ind.1.3 <- plot(DATA.PCA,
choix="ind",
axes=c(1,3),
graph.type = "classic")
ggsave("DATA.PCA.samples.pdf",
arrangeGrob(DATA.PCA.ind.1.2,
DATA.PCA.ind.1.3,
ncol=2),
width=20,
height=10)
ggsave("DATA.PCA.samples.pdf",
arrangeGrob(DATA.PCA.ind.1.2,
DATA.PCA.ind.1.3,
nrow=1),
width=20,
height=10)
DATA.PCA.ind.1.2 <- plot(DATA.PCA,
choix="ind",
axes=c(1,2))
DATA.PCA.ind.1.3 <- plot(DATA.PCA,
choix="ind",
axes=c(1,3))
ggsave("DATA.PCA.samples.pdf",
arrangeGrob(DATA.PCA.ind.1.2,
DATA.PCA.ind.1.3,
nrow=1),
width=20,
height=10)
?arrangeGrob
DATA.PCA.ind.1.2 <- plot(DATA.PCA,
choix="ind",
axes=c(1,2))
DATA.PCA.ind.2.3 <- plot(DATA.PCA,
choix="ind",
axes=c(2,3))
ggsave("DATA.PCA.samples.pdf",
arrangeGrob(DATA.PCA.ind.1.2,
DATA.PCA.ind.2.3,
nrow=1),
width=20,
height=10)
?plot.PCA
library(ggpubr)
